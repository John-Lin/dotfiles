" Here is the settings for Vundle
" Find the other settings in <mosky.vim>/plugin/*.vim

set t_Co=256
syntax on
set number
set backspace=2
set autoindent
set nocompatible               " be iMproved
set tabstop=4                  " switch the tab to 4 space 
set shiftwidth=4     
set expandtab                  " save tab ro space
set ignorecase                 " not case sensitive
set hlsearch
set mouse=a

filetype off                   " required!

set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

" let Vundle manage Vundle
" required! 
Bundle 'gmarik/vundle'

" python-mode 
let g:pymode_folding = 1 
let g:pymode_motion = 1
" let g:pymode_lint = 0

" EasyMotion
let g:EasyMotion_leader_key = '\'

" Airline
let g:airline_powerline_fonts = 0
let g:airline_theme = 'badwolf'
let g:airline#extensions#branch#enabled = 1
let g:airline#extensions#branch#empty_message = ''
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#left_sep = '▶'
let g:airline#extensions#tabline#left_alt_sep = '|'
let g:airline_detect_paste=1

if !exists('g:airline_symbols')
          let g:airline_symbols = {}
endif

" unicode symbols
let g:airline_left_sep = '»'
let g:airline_left_sep = '▶'
let g:airline_right_sep = '«'
let g:airline_right_sep = '◀'
let g:airline_symbols.linenr = '␊'
let g:airline_symbols.linenr = '␤'
let g:airline_symbols.linenr = '¶'
let g:airline_symbols.branch = '⎇'
let g:airline_symbols.paste = 'ρ'
let g:airline_symbols.paste = 'Þ'
let g:airline_symbols.paste = '∥'
let g:airline_symbols.whitespace = 'Ξ'



"Powerline
"let g:Powerline_symbols = 'fancy'
set nocompatible   " Disable vi-compatibility
set laststatus=2   " Always show the statusline
set encoding=utf-8 " Necessary to show Unicode glyphs

" colorscheme ** $ cp -r ~/.vim/bundle/wombat256.vim/colors ~/.vim ** 
colorscheme wombat256mod
let python_highlight_all = 1

" Cscope && Pycscope
autocmd FileType python nmap <F9> :!find . -iname '*.c' -o -iname '*.cpp' -o -iname '*.h' -o -iname '*.hpp' -o -iname '*.py' >cscope.files<CR>
  \:!pycscope -S -i cscope.files -f cscope.out<CR>
  \:cs reset<CR>

function! LoadCscope()
      let db = findfile("cscope.out", ".;")
        if (!empty(db))
            let path = strpart(db, 0, match(db, "/cscope.out$"))
            set nocscopeverbose " suppress 'duplicate connection' error
            exe "cs add " . db . " " . path
            set cscopeverbose
        endif
endfunction
au BufEnter /* call LoadCscope()
" call LoadCscope()

if has('cscope')
    set cscopetag cscopeverbose
    if has('quickfix')
        set cscopequickfix=s-,c-,d-,i-,t-,e-
    endif

    cnoreabbrev csa cs add
    cnoreabbrev csf cs find
    cnoreabbrev csk cs kill
    cnoreabbrev csr cs reset
    cnoreabbrev css cs show
    cnoreabbrev csh cs help

    command -nargs=0 Cscope cs add $VIMSRC/src/cscope.out $VIMSRC/src
endif


"NERDTree shortcuts
map <F2> :NERDTreeToggle<CR>

"Conque
let g:ConqueTerm_Color = 2
let g:ConqueTerm_StartMessages = 0
map <F8> :ConqueTermSplit bash<CR>

"Tagbar list
map <F5> :TagbarToggle<CR>

"Pydiction
let g:pydiction_location = '/home/john/.vim/bundle/Pydiction/complete-dict'

" My Bundles here:
" original repos on github
Bundle 'msanders/snipmate.vim'
Bundle 'kien/ctrlp.vim'
Bundle 'majutsushi/tagbar'
Bundle 'vim-scripts/c.vim'
Bundle 'klen/python-mode'
Bundle 'tpope/vim-fugitive'
Bundle 'scrooloose/nerdtree'
"Bundle 'Lokaltog/powerline'
"Bundle 'Lokaltog/vim-powerline'
Bundle 'bling/vim-airline'
Bundle 'Lokaltog/vim-easymotion'
"Bundle 'rstacruz/sparkup', {'rtp': 'vim/'}

" non github repos

"Bundle 'git://git.wincent.com/command-t.git'

" vim-scripts repos
Bundle 'wombat256.vim'
Bundle 'L9'
Bundle 'cscope.vim'
Bundle 'python.vim'
Bundle 'AutoComplPop'
Bundle 'matchit.zip'
Bundle 'python_match.vim'
Bundle 'surround.vim'
Bundle 'mako.vim'
Bundle 'nginx.vim'
Bundle 'vim-indent-object'
Bundle 'FuzzyFinder'
Bundle 'Pydiction'
"Bundle 'desert.vim'
Bundle 'taglist.vim'

filetype plugin indent on     " required!
"
" Brief help
" :BundleList          - list configured bundles
" :BundleInstall(!)    - install(update) bundles
" :BundleSearch(!) foo - search(or refresh cache first) for foo
" :BundleClean(!)      - confirm(or auto-approve) removal of unused bundles
"
" see :h vundle for more details or wiki for FAQ
" NOTE: comments after Bundle command are not allowed..
